{"id":"W7g8","dependencies":[{"name":"/srv/public/files/universal-common-scripts/package.json","includedInParent":true,"mtime":1605471894880}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.jsp=exports.js=exports.log=void 0;var r=function(){var r,e=\"log\";[\"log\",\"info\",\"warn\",\"error\",\"table\",\"debug\",\"trace\"].includes(arguments[0])&&(e=arguments.shift()),(r=console)[e].apply(r,arguments)};exports.log=r;var e=function(r){return JSON.stringify(r)};exports.js=e;var o=function(r){return JSON.parse(JSON.stringify(r))};exports.jsp=o;"},"sourceMaps":{"js":{"mappings":[{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":0}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":13}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":20}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":35}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":43}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":56}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":57}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":64}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":68}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":76}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":80}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":88}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":91}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":99}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":108}},{"source":"sh.js","original":{"line":1,"column":7},"generated":{"line":1,"column":110}},{"source":"sh.js","name":"log","original":{"line":1,"column":13},"generated":{"line":1,"column":114}},{"source":"sh.js","original":{"line":1,"column":19},"generated":{"line":1,"column":116}},{"source":"sh.js","original":{"line":1,"column":31},"generated":{"line":1,"column":127}},{"source":"sh.js","original":{"line":1,"column":31},"generated":{"line":1,"column":131}},{"source":"sh.js","name":"action","original":{"line":2,"column":5},"generated":{"line":1,"column":133}},{"source":"sh.js","original":{"line":2,"column":14},"generated":{"line":1,"column":135}},{"source":"sh.js","original":{"line":3,"column":5},"generated":{"line":1,"column":141}},{"source":"sh.js","original":{"line":3,"column":6},"generated":{"line":1,"column":142}},{"source":"sh.js","original":{"line":3,"column":13},"generated":{"line":1,"column":148}},{"source":"sh.js","original":{"line":3,"column":21},"generated":{"line":1,"column":155}},{"source":"sh.js","original":{"line":3,"column":29},"generated":{"line":1,"column":162}},{"source":"sh.js","original":{"line":3,"column":38},"generated":{"line":1,"column":170}},{"source":"sh.js","original":{"line":3,"column":47},"generated":{"line":1,"column":178}},{"source":"sh.js","original":{"line":3,"column":56},"generated":{"line":1,"column":186}},{"source":"sh.js","name":"includes","original":{"line":3,"column":65},"generated":{"line":1,"column":195}},{"source":"sh.js","name":"arguments","original":{"line":3,"column":74},"generated":{"line":1,"column":204}},{"source":"sh.js","original":{"line":3,"column":84},"generated":{"line":1,"column":214}},{"source":"sh.js","name":"action","original":{"line":4,"column":2},"generated":{"line":1,"column":220}},{"source":"sh.js","name":"arguments","original":{"line":4,"column":11},"generated":{"line":1,"column":222}},{"source":"sh.js","name":"shift","original":{"line":4,"column":21},"generated":{"line":1,"column":232}},{"source":"sh.js","name":"console","original":{"line":7,"column":1},"generated":{"line":1,"column":242}},{"source":"sh.js","name":"console","original":{"line":7,"column":1},"generated":{"line":1,"column":244}},{"source":"sh.js","name":"action","original":{"line":7,"column":9},"generated":{"line":1,"column":253}},{"source":"sh.js","name":"arguments","original":{"line":7,"column":20},"generated":{"line":1,"column":256}},{"source":"sh.js","name":"arguments","original":{"line":7,"column":20},"generated":{"line":1,"column":262}},{"source":"sh.js","name":"arguments","original":{"line":7,"column":20},"generated":{"line":1,"column":264}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":276}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":284}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":288}},{"source":"sh.js","original":{"line":10,"column":7},"generated":{"line":1,"column":290}},{"source":"sh.js","name":"js","original":{"line":10,"column":13},"generated":{"line":1,"column":294}},{"source":"sh.js","original":{"line":10,"column":18},"generated":{"line":1,"column":296}},{"source":"sh.js","name":"val","original":{"line":10,"column":28},"generated":{"line":1,"column":305}},{"source":"sh.js","name":"JSON","original":{"line":11,"column":8},"generated":{"line":1,"column":308}},{"source":"sh.js","name":"JSON","original":{"line":11,"column":8},"generated":{"line":1,"column":315}},{"source":"sh.js","name":"stringify","original":{"line":11,"column":13},"generated":{"line":1,"column":320}},{"source":"sh.js","name":"val","original":{"line":11,"column":23},"generated":{"line":1,"column":330}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":334}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":342}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":345}},{"source":"sh.js","original":{"line":14,"column":7},"generated":{"line":1,"column":347}},{"source":"sh.js","name":"jsp","original":{"line":14,"column":13},"generated":{"line":1,"column":351}},{"source":"sh.js","original":{"line":14,"column":19},"generated":{"line":1,"column":353}},{"source":"sh.js","name":"val","original":{"line":14,"column":29},"generated":{"line":1,"column":362}},{"source":"sh.js","name":"JSON","original":{"line":15,"column":8},"generated":{"line":1,"column":365}},{"source":"sh.js","name":"JSON","original":{"line":15,"column":8},"generated":{"line":1,"column":372}},{"source":"sh.js","name":"parse","original":{"line":15,"column":13},"generated":{"line":1,"column":377}},{"source":"sh.js","name":"JSON","original":{"line":15,"column":19},"generated":{"line":1,"column":383}},{"source":"sh.js","name":"stringify","original":{"line":15,"column":24},"generated":{"line":1,"column":388}},{"source":"sh.js","name":"val","original":{"line":15,"column":34},"generated":{"line":1,"column":398}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":403}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":411}},{"source":"sh.js","original":{"line":62,"column":0},"generated":{"line":1,"column":415}}],"sources":{"sh.js":"export const log = function () {\n\tlet action = 'log';\n\tif (['log', 'info', 'warn', 'error', 'table', 'debug', 'trace'].includes(arguments[0])) {\n\t\taction = arguments.shift();\n\n\t}\n\tconsole[action](...arguments);\n};\n\nexport const js = function (val) {\n\treturn JSON.stringify(val);\n};\n\nexport const jsp = function (val) {\n\treturn JSON.parse(JSON.stringify(val));\n};\n\n\n// import PropTypes from 'prop-types';\n//\n// let propTypeShapeOf = function (value) {\n// \t// console.log('propTypeShapeOf', value);\n// \tlet output = 'PropTypes.shape({\\n';\n// \tfor (let key in value) {\n// \t\tconsole.log('that.' + key);\n// \t\t// output += `  ${key}: PropTypes.${propTypeOf(value[key])}.isRequired,\\n`;\n// \t}\n// \toutput += '}),';\n// \treturn output;\n// };\n// let propTypeOf = function (value) {\n// \tswitch (typeof value) {\n// \t\tcase 'function':\n// \t\t\treturn 'func';\n// \t\tcase 'boolean':\n// \t\t\treturn 'bool';\n// \t\tcase 'object':\n// \t\t\tif (Array.isArray(value)) {\n// \t\t\t\treturn 'array';\n// \t\t\t} else if (value === null) {\n// \t\t\t\treturn 'null';\n// \t\t\t} else {\n// \t\t\t\treturn propTypeShapeOf(value);\n// \t\t\t}\n// \t\t\treturn 'bool';\n// \t\tdefault:\n// \t\t\treturn typeof value;\n// \t}\n// };\n// DomainsResults.propTypes = {\n// \tthat: pt.shape({\n// \t\tstate: pt.shape({}),\n// \t\tprops: pt.shape({}),\n// \t\ttoggleResults: pt.func({}),\n// \t}),\n// };\n\n// /*\n//  * build propTypes declaration, recursively\n//  */\n// let pt = 'that: ' + propTypeShapeOf(that);\n// console.log(pt);"},"lineCount":null}},"error":null,"hash":"14f78cec6a2ea7352a1d9ac93aaa27c9","cacheData":{"env":{}}}